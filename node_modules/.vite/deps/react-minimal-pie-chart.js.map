{
  "version": 3,
  "sources": ["../../svg-partial-circle/index.js", "../../react-minimal-pie-chart/dist/index.esm.js"],
  "sourcesContent": ["'use strict'\n\n// from http://stackoverflow.com/a/18473154\nconst partialCircle = (cx, cy, r, start, end) => {\n\tconst length = end - start\n\tif (length === 0) return []\n\n\tconst fromX = r * Math.cos(start) + cx\n\tconst fromY = r * Math.sin(start) + cy\n\tconst toX = r * Math.cos(end) + cx\n\tconst toY = r * Math.sin(end) + cy\n\tconst large = Math.abs(length) <= Math.PI ? '0' : '1'\n\tconst sweep = length < 0 ? '0' : '1'\n\n\treturn [\n\t\t['M', fromX, fromY],\n\t\t['A', r, r, 0, large, sweep, toX, toY]\n\t]\n}\n\nmodule.exports = partialCircle\n", "import React, { useState, useEffect } from 'react';\nimport partialCircle from 'svg-partial-circle';\n\nfunction degreesToRadians(degrees) {\n    return (degrees * Math.PI) / 180;\n}\nfunction valueBetween(value, min, max) {\n    if (value > max)\n        return max;\n    if (value < min)\n        return min;\n    return value;\n}\nfunction extractPercentage(value, percentage) {\n    return (percentage / 100) * value;\n}\nfunction bisectorAngle(startAngle, lengthAngle) {\n    return startAngle + lengthAngle / 2;\n}\nfunction shiftVectorAlongAngle(angle, distance) {\n    const angleRadians = degreesToRadians(angle);\n    return {\n        dx: distance * Math.cos(angleRadians),\n        dy: distance * Math.sin(angleRadians),\n    };\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n/**\n * Conditionally return a prop or a function prop result\n */\nfunction functionProp(prop, payload) {\n    return typeof prop === 'function'\n        ? // @ts-expect-error: cannot find a way to type 2nd prop arg as anything-but-function\n            prop(payload)\n        : prop;\n}\n\nfunction sumValues(data) {\n    let sum = 0;\n    for (let i = 0; i < data.length; i++) {\n        sum += data[i].value;\n    }\n    return sum;\n}\n// Append \"percentage\", \"degrees\" and \"startAngle\" to each data entry\nfunction extendData({ data, lengthAngle: totalAngle, totalValue, paddingAngle, startAngle: chartStartAngle, }) {\n    const total = totalValue || sumValues(data);\n    const normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n    const numberOfPaddings = Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n    const singlePaddingDegrees = Math.abs(paddingAngle) * Math.sign(totalAngle);\n    const degreesTakenByPadding = singlePaddingDegrees * numberOfPaddings;\n    const degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n    let lastSegmentEnd = 0;\n    const extendedData = [];\n    // @NOTE: Shall we evaluate percentage accordingly to dataEntry.value's sign?\n    for (let i = 0; i < data.length; i++) {\n        const dataEntry = data[i];\n        const valueInPercentage = total === 0 ? 0 : (dataEntry.value / total) * 100;\n        const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n        const startAngle = lastSegmentEnd + chartStartAngle;\n        lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n        extendedData.push(Object.assign({\n            percentage: valueInPercentage,\n            startAngle,\n            degrees,\n        }, dataEntry));\n    }\n    return extendedData;\n}\n\nfunction ReactMinimalPieChartLabel({ renderLabel, labelProps, }) {\n    const label = renderLabel(labelProps);\n    // Default label\n    if (typeof label === 'string' || typeof label === 'number') {\n        const { dataEntry, dataIndex, ...props } = labelProps;\n        return (React.createElement(\"text\", { dominantBaseline: \"central\", ...props }, label));\n    }\n    if (React.isValidElement(label)) {\n        return label;\n    }\n    return null;\n}\n\nfunction round(number) {\n    const divisor = 1e14; // 14 decimals\n    return Math.round((number + Number.EPSILON) * divisor) / divisor;\n}\nfunction evaluateTextAnchorPosition({ labelPosition, lineWidth, labelHorizontalShift, }) {\n    const dx = round(labelHorizontalShift);\n    // Label in the vertical center\n    if (dx === 0) {\n        return 'middle';\n    }\n    // Outward label\n    if (labelPosition > 100) {\n        return dx > 0 ? 'start' : 'end';\n    }\n    // Inward label\n    const innerRadius = 100 - lineWidth;\n    if (labelPosition < innerRadius) {\n        return dx > 0 ? 'end' : 'start';\n    }\n    // Overlying label\n    return 'middle';\n}\nfunction makeLabelRenderProps(data, props) {\n    return data.map((dataEntry, index) => {\n        const segmentsShift = functionProp(props.segmentsShift, index) ?? 0;\n        const distanceFromCenter = extractPercentage(props.radius, props.labelPosition) + segmentsShift;\n        const { dx, dy } = shiftVectorAlongAngle(bisectorAngle(dataEntry.startAngle, dataEntry.degrees), distanceFromCenter);\n        // This object is passed as argument to the \"label\" function prop\n        const labelRenderProps = {\n            x: props.center[0],\n            y: props.center[1],\n            dx,\n            dy,\n            textAnchor: evaluateTextAnchorPosition({\n                labelPosition: props.labelPosition,\n                lineWidth: props.lineWidth,\n                labelHorizontalShift: dx,\n            }),\n            dataEntry,\n            dataIndex: index,\n            style: functionProp(props.labelStyle, index),\n        };\n        return labelRenderProps;\n    });\n}\nfunction renderLabels(data, props) {\n    const { label } = props;\n    if (label) {\n        return makeLabelRenderProps(data, props).map((labelRenderProps, index) => (React.createElement(ReactMinimalPieChartLabel, { key: `label-${labelRenderProps.dataEntry.key || index}`, renderLabel: label, labelProps: labelRenderProps })));\n    }\n}\n\nfunction makePathCommands(cx, cy, startAngle, lengthAngle, radius) {\n    const patchedLengthAngle = valueBetween(lengthAngle, -359.999, 359.999);\n    return partialCircle(cx, cy, // center X and Y\n    radius, degreesToRadians(startAngle), degreesToRadians(startAngle + patchedLengthAngle))\n        .map((command) => command.join(' '))\n        .join(' ');\n}\nfunction ReactMinimalPieChartPath({ cx, cy, lengthAngle, lineWidth, radius, shift = 0, reveal, rounded, startAngle, title, ...props }) {\n    const pathRadius = radius - lineWidth / 2;\n    //@NOTE This shift might be rendered as a translation in future\n    const { dx, dy } = shiftVectorAlongAngle(bisectorAngle(startAngle, lengthAngle), shift);\n    const pathCommands = makePathCommands(cx + dx, cy + dy, startAngle, lengthAngle, pathRadius);\n    let strokeDasharray;\n    let strokeDashoffset;\n    // Animate/hide paths with \"stroke-dasharray\" + \"stroke-dashoffset\"\n    // https://css-tricks.com/svg-line-animation-works/\n    if (isNumber(reveal)) {\n        const pathLength = degreesToRadians(pathRadius) * lengthAngle;\n        strokeDasharray = Math.abs(pathLength);\n        strokeDashoffset =\n            strokeDasharray - extractPercentage(strokeDasharray, reveal);\n    }\n    return (React.createElement(\"path\", { d: pathCommands, fill: \"none\", strokeWidth: lineWidth, strokeDasharray: strokeDasharray, strokeDashoffset: strokeDashoffset, strokeLinecap: rounded ? 'round' : undefined, ...props }, title && React.createElement(\"title\", null, title)));\n}\n\nfunction combineSegmentTransitionsStyle(duration, easing, customStyle) {\n    // Merge chart's animation CSS transition with \"transition\" found to customStyle\n    let transition = `stroke-dashoffset ${duration}ms ${easing}`;\n    if (customStyle && customStyle.transition) {\n        transition = `${transition},${customStyle.transition}`;\n    }\n    return {\n        transition,\n    };\n}\nfunction getRevealValue({ reveal, animate, }) {\n    //@NOTE When animation is on, chart has to be fully revealed when reveal is not set\n    if (animate && !isNumber(reveal)) {\n        return 100;\n    }\n    return reveal;\n}\nfunction makeEventHandler(eventHandler, payload) {\n    return (eventHandler &&\n        ((e) => {\n            eventHandler(e, payload);\n        }));\n}\nfunction renderSegments(data, props, revealOverride) {\n    // @NOTE this should go in Path component. Here for performance reasons\n    const reveal = revealOverride ?? getRevealValue(props);\n    const { radius, center: [cx, cy], } = props;\n    const lineWidth = extractPercentage(radius, props.lineWidth);\n    const paths = data.map((dataEntry, index) => {\n        const segmentsStyle = functionProp(props.segmentsStyle, index);\n        return (React.createElement(ReactMinimalPieChartPath, { cx: cx, cy: cy, key: dataEntry.key || index, lengthAngle: dataEntry.degrees, lineWidth: lineWidth, radius: radius, rounded: props.rounded, reveal: reveal, shift: functionProp(props.segmentsShift, index), startAngle: dataEntry.startAngle, title: dataEntry.title, style: Object.assign({}, segmentsStyle, props.animate &&\n                combineSegmentTransitionsStyle(props.animationDuration, props.animationEasing, segmentsStyle)), stroke: dataEntry.color, tabIndex: props.segmentsTabIndex, onBlur: makeEventHandler(props.onBlur, index), onClick: makeEventHandler(props.onClick, index), onFocus: makeEventHandler(props.onFocus, index), onKeyDown: makeEventHandler(props.onKeyDown, index), onMouseOver: makeEventHandler(props.onMouseOver, index), onMouseOut: makeEventHandler(props.onMouseOut, index) }));\n    });\n    if (props.background) {\n        paths.unshift(React.createElement(ReactMinimalPieChartPath, { cx: cx, cy: cy, key: \"bg\", lengthAngle: props.lengthAngle, lineWidth: lineWidth, radius: radius, rounded: props.rounded, startAngle: props.startAngle, stroke: props.background }));\n    }\n    return paths;\n}\n\nconst defaultProps = {\n    animationDuration: 500,\n    animationEasing: 'ease-out',\n    center: [50, 50],\n    data: [],\n    labelPosition: 50,\n    lengthAngle: 360,\n    lineWidth: 100,\n    paddingAngle: 0,\n    radius: 50,\n    startAngle: 0,\n    viewBoxSize: [100, 100],\n};\nfunction makePropsWithDefaults(props) {\n    const result = Object.assign({}, defaultProps, props);\n    // @NOTE Object.assign doesn't default properties with undefined value (like React defaultProps does)\n    let key;\n    for (key in defaultProps) {\n        if (props[key] === undefined) {\n            // @ts-expect-error: TS cannot ensure we're assigning the expected props accross abjects\n            result[key] = defaultProps[key];\n        }\n    }\n    return result;\n}\nfunction ReactMinimalPieChart(originalProps) {\n    const props = makePropsWithDefaults(originalProps);\n    const [revealOverride, setRevealOverride] = useState(props.animate ? 0 : null);\n    useEffect(() => {\n        if (props.animate) {\n            // Trigger initial animation\n            setRevealOverride(null);\n        }\n    }, []);\n    const extendedData = extendData(props);\n    return (React.createElement(\"svg\", { viewBox: `0 0 ${props.viewBoxSize[0]} ${props.viewBoxSize[1]}`, width: \"100%\", height: \"100%\", className: props.className, style: props.style },\n        renderSegments(extendedData, props, revealOverride),\n        renderLabels(extendedData, props),\n        props.children));\n}\n\nexport { ReactMinimalPieChart as PieChart, defaultProps as pieChartDefaultProps };\n"],
  "mappings": "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",
  "names": ["partialCircle", "React", "partialCircle"]
}
